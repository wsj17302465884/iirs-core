<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IIRS</name>
    </assembly>
    <members>
        <member name="T:IIRS.Controllers.LoginController">
            <summary>
            登录控制器
            </summary>
        </member>
        <member name="F:IIRS.Controllers.LoginController._requirement">
            <summary>
            必要权限参数
            </summary>
        </member>
        <member name="F:IIRS.Controllers.LoginController._logger">
            <summary>
            日志记录器
            </summary>
        </member>
        <member name="M:IIRS.Controllers.LoginController.#ctor(IIRS.Utilities.AuthHelper.PermissionRequirement,IIRS.IRepository.IUserInfoRepository,IIRS.IRepository.IRoleModulePermissionRepository,Microsoft.Extensions.Logging.ILogger{IIRS.Controllers.LoginController})">
            <summary>
            初始化
            </summary>
            <param name="requirement"></param>
            <param name="userInfoRepository"></param>
            <param name="roleModulePermissionRepository"></param>
            <param name="logger"></param>
        </member>
        <member name="M:IIRS.Controllers.LoginController.GetJwtToken(System.String,System.String)">
            <summary>
            获取JWT的方法
            </summary>
            <param name="name">登录名</param>
            <param name="pass">密码</param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Controllers.LoginController.RefreshToken(System.String)">
            <summary>
            请求刷新Token（以旧换新）
            </summary>
            <param name="token">旧 Token</param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Controllers.LoginController.Md5Password(System.String)">
            <summary>
            测试 MD5 加密字符串
            </summary>
            <param name="password">待加密密码</param>
            <returns></returns>
        </member>
        <member name="T:IIRS.Controllers.V1.TestController">
            <summary>
            第一版测试控制器
            </summary>
        </member>
        <member name="M:IIRS.Controllers.V1.TestController.Get">
            <summary>
            Get
            </summary>
        </member>
        <member name="M:IIRS.Controllers.V1.TestController.TestAction">
            <summary>
            测试个路由
            </summary>
            <returns></returns>
        </member>
        <member name="T:IIRS.Controllers.V2.TestController">
            <summary>
            第二版测试控制器
            </summary>
        </member>
        <member name="F:IIRS.Controllers.V2.TestController._dbTransManagement">
            <summary>
            事务管理
            </summary>
        </member>
        <member name="F:IIRS.Controllers.V2.TestController._sqlSugarClient">
            <summary>
            数据库集合
            </summary>
        </member>
        <member name="F:IIRS.Controllers.V2.TestController._sysUserInfoRepository">
            <summary>
            用户信息表
            </summary>
        </member>
        <member name="F:IIRS.Controllers.V2.TestController._kw_LOGRepository">
            <summary>
            LYSCK中一个表
            </summary>
        </member>
        <member name="F:IIRS.Controllers.V2.TestController._testTableRepository">
            <summary>
            测试表
            </summary>
        </member>
        <member name="F:IIRS.Controllers.V2.TestController._logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:IIRS.Controllers.V2.TestController.#ctor(IIRS.IRepository.Base.IDBTransManagement,IIRS.IRepository.IUserInfoRepository,IIRS.IRepository.IKW_LOGRepository,IIRS.IRepository.ITestTableRepository,Microsoft.Extensions.Logging.ILogger{IIRS.Controllers.V2.TestController})">
            <summary>
            初始化，依赖注入相关接口类
            </summary>
            <param name="dbTransManagement"></param>
            <param name="sysUserInfoRepository"></param>
            <param name="kw_LOGRepository"></param>
            <param name="testTableRepository"></param>
            <param name="logger"></param>
        </member>
        <member name="M:IIRS.Controllers.V2.TestController.Get">
            <summary>
            测试一：主数据库读取
            </summary>
            <returns></returns>
        </member>
        <member name="M:IIRS.Controllers.V2.TestController.Get2">
            <summary>
            测试二：非主数据库读取
            </summary>
            <returns></returns>
        </member>
        <member name="M:IIRS.Controllers.V2.TestController.Get3">
            <summary>
            测试三：SQL语句执行
            </summary>
            <returns></returns>
        </member>
        <member name="M:IIRS.Controllers.V2.TestController.Get4">
            <summary>
            测试四：事务测试
            </summary>
            <returns></returns>
        </member>
        <member name="T:IIRS.Extensions.AuthorizationSetup">
            <summary>
            自定义 Authorization 安装类
            </summary>
        </member>
        <member name="M:IIRS.Extensions.AuthorizationSetup.AddAuthorizationSetup(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            安装自定义 Authorization 方法
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:IIRS.Extensions.MiniProfilerSetup">
            <summary>
            MiniProfiler 启动服务
            </summary>
        </member>
        <member name="T:IIRS.Extensions.SqlsugarSetup">
            <summary>
            SqlSuger 安装类
            </summary>
        </member>
        <member name="M:IIRS.Extensions.SqlsugarSetup.AddSqlsugarSetup(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            安装 SqlSuger 方法
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:IIRS.Extensions.SwaggerSetup">
            <summary>
            Swagger 设置类
            </summary>
        </member>
        <member name="F:IIRS.Extensions.SwaggerSetup.logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:IIRS.Extensions.SwaggerSetup.AddSwaggerSetup(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            依赖注入 Swagger 服务
            </summary>
            <param name="services">ServiceCollection对象</param>
        </member>
        <member name="T:IIRS.Permissions">
            <summary>
            权限变量配置
            </summary>
        </member>
        <member name="T:IIRS.RoutePrefix">
            <summary>
            路由变量前缀配置
            </summary>
        </member>
        <member name="F:IIRS.RoutePrefix.Name">
            <summary>
            前缀名
            如果不需要，尽量留空，不要修改
            除非一定要在所有的 api 前统一加上特定前缀
            </summary>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.QueryById(System.Object)">
            <summary>
            根据对象查询一条数据
            </summary>
            <param name="objId"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.QueryById(System.Object,System.Boolean)">
            <summary>
            根据ID查询一条数据
            </summary>
            <param name="objId">id（必须指定主键特性 [SugarColumn(IsPrimaryKey=true)]），如果是联合主键，请使用Where条件</param>
            <param name="blnUseCache">是否使用缓存</param>
            <returns>数据实体</returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.QueryByIDs(System.Object[])">
            <summary>
            根据ID查询数据
            </summary>
            <param name="lstIds">id列表（必须指定主键特性 [SugarColumn(IsPrimaryKey=true)]），如果是联合主键，请使用Where条件</param>
            <returns>数据实体列表</returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.Query">
            <summary>
            查询所有数据
            </summary>
            <returns>数据列表</returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.Query(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            查询数据列表
            </summary>
            <param name="whereExpression">whereExpression</param>
            <returns>数据列表</returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.Query(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean)">
            <summary>
            查询一个列表
            </summary>
            <param name="whereExpression"></param>
            <param name="orderByExpression"></param>
            <param name="isAsc"></param>
            <returns>数据列表</returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.Query(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.String)">
            <summary>
            查询前N条数据
            </summary>
            <param name="whereExpression">条件表达式</param>
            <param name="intTop">前N条</param>
            <param name="strOrderByFileds">排序字段，如name asc,age desc</param>
            <returns>数据列表</returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.QueryPage(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.String)">
            <summary>
            分页查询
            </summary>
            <param name="whereExpression">条件表达式</param>
            <param name="intPageIndex">页码（下标0）</param>
            <param name="intPageSize">页大小</param>
            <param name="strOrderByFileds">排序字段，如name asc,age desc</param>
            <returns>数据列表</returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.QueryMuch``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,System.Object[]}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2,System.Boolean}})">
            <summary>
            查询-多表查询
            </summary> 
            <typeparam name="T">实体1</typeparam> 
            <typeparam name="T2">实体2</typeparam> 
            <typeparam name="T3">实体3</typeparam>
            <typeparam name="TResult">返回对象</typeparam>
            <param name="joinExpression">关联表达式 (join1,join2) => new object[] {JoinType.Left,join1.UserNo==join2.UserNo}</param> 
            <param name="selectExpression">返回表达式 (s1, s2) => new { Id =s1.UserNo, Id1 = s2.UserNo}</param>
            <param name="whereLambda">查询表达式 (w1, w2) =>w1.UserNo == "")</param> 
            <returns>值</returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.Add(`0)">
            <summary>
            写入实体数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.Add(`0,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            写入实体数据
            </summary>
            <param name="entity">实体类</param>
            <param name="insertColumns">指定只插入列</param>
            <returns>返回自增量列</returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.Add(System.Collections.Generic.List{`0})">
            <summary>
            批量插入实体(速度快)
            </summary>
            <param name="listEntity">实体集合</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.Update(`0)">
            <summary>
            更新实体数据
            </summary>
            <param name="entity">实体类</param>
            <returns></returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.Update(`0,System.String)">
            <summary>
            更新实体数据
            </summary>
            <param name="entity">实体类</param>
            <param name="strWhere"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.Update(System.String,SqlSugar.SugarParameter[])">
            <summary>
            更新实体数据
            </summary>
            <param name="strSql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.Update(System.Object)">
            <summary>
            更新实体数据
            </summary>
            <param name="operateAnonymousObjects"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.Update(`0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String)">
            <summary>
            更新实体数据
            </summary>
            <param name="entity"></param>
            <param name="lstColumns"></param>
            <param name="lstIgnoreColumns"></param>
            <param name="strWhere"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.Delete(`0)">
            <summary>
            根据实体删除一条数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.DeleteById(System.Object)">
            <summary>
            删除指定ID的数据
            </summary>
            <param name="id">主键ID</param>
            <returns></returns>
        </member>
        <member name="M:IIRS.IRepository.Base.IBaseRepository`1.DeleteByIds(System.Object[])">
            <summary>
            删除指定ID集合的数据(批量删除)
            </summary>
            <param name="ids">主键ID集合</param>
            <returns></returns>
        </member>
        <member name="T:IIRS.IRepository.IModuleRepository">
            <summary>
            IModuleRepository
            </summary>	
        </member>
        <member name="T:IIRS.IRepository.IUserRoleRepository">
            <summary>
            IUserRoleRepository
            </summary>	
        </member>
        <member name="T:IIRS.Models.EntityModel.Module">
            <summary>
            接口API地址信息表
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Module.IsDeleted">
            <summary>
            是否禁用，逻辑上的删除，非物理删除
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Module.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Module.LinkUrl">
            <summary>
            菜单链接地址
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Module.Description">
            <summary>
            /描述
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Module.Enabled">
            <summary>
            是否激活
            </summary>
        </member>
        <member name="T:IIRS.Models.EntityModel.Permission">
            <summary>
            路由菜单表
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Permission.IsDeleted">
            <summary>
            是否禁用，逻辑上的删除，非物理删除
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Permission.Code">
            <summary>
            菜单执行Action名
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Permission.Name">
            <summary>
            菜单显示名（如用户页、编辑(按钮)、删除(按钮)）
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Permission.IsButton">
            <summary>
            是否是按钮
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Permission.IsHide">
            <summary>
            是否是隐藏菜单
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Permission.Pid">
            <summary>
            上一级菜单（ Guid.Empty() 表示上一级无菜单）
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Permission.Mid">
            <summary>
            接口api
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Permission.OrderSort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Permission.Icon">
            <summary>
            菜单图标
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Permission.Description">
            <summary>
            菜单描述
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Permission.Enabled">
            <summary>
            激活状态
            </summary>
        </member>
        <member name="T:IIRS.Models.EntityModel.Role">
            <summary>
            角色表
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Role.IsDeleted">
            <summary>
            是否禁用，逻辑上的删除，非物理删除
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Role.Name">
            <summary>
            角色名
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Role.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Role.OrderSort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.Role.Enabled">
            <summary>
            是否激活
            </summary>
        </member>
        <member name="T:IIRS.Models.EntityModel.RoleModulePermission">
            <summary>
            
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.RoleModulePermission.IsDeleted">
            <summary>
            是否禁用，逻辑上的删除，非物理删除
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.RoleModulePermission.RoleId">
            <summary>
            角色ID
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.RoleModulePermission.ModuleId">
            <summary>
            菜单ID
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.RoleModulePermission.PermissionId">
            <summary>
            API ID
            </summary>
        </member>
        <member name="T:IIRS.Models.EntityModel.UserInfo">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="M:IIRS.Models.EntityModel.UserInfo.#ctor">
            <summary>
            初始化用户信息类
            </summary>
        </member>
        <member name="M:IIRS.Models.EntityModel.UserInfo.#ctor(System.Guid,System.String,System.String)">
            <summary>
            初始化用户信息类
            </summary>
            <param name="id">用户编号</param>
            <param name="loginName">登录名</param>
            <param name="loginPWD">密码</param>
        </member>
        <member name="P:IIRS.Models.EntityModel.UserInfo.Id">
            <summary>
            用户编号
            </summary>
            [SugarColumn(IsNullable = false, IsPrimaryKey = true, IsIdentity = true)]
        </member>
        <member name="P:IIRS.Models.EntityModel.UserInfo.LoginName">
            <summary>
            登录名
            </summary>
            [SugarColumn(ColumnDataType ="nvarchar",Length = 200, IsNullable = true)]
        </member>
        <member name="P:IIRS.Models.EntityModel.UserInfo.LoginPWD">
            <summary>
            登录密码
            </summary>
            [SugarColumn(ColumnDataType ="nvarchar",Length = 200, IsNullable = true)]
        </member>
        <member name="P:IIRS.Models.EntityModel.UserInfo.RealName">
            <summary>
            真实姓名
            </summary>
            [SugarColumn(ColumnDataType ="nvarchar",Length = 200, IsNullable = true)]
        </member>
        <member name="P:IIRS.Models.EntityModel.UserInfo.Status">
            <summary>
            用户状态
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.UserInfo.Remark">
            <summary>
            备注
            </summary>
            [SugarColumn(ColumnDataType ="nvarchar",Length = int.MaxValue, IsNullable = true)]
        </member>
        <member name="P:IIRS.Models.EntityModel.UserInfo.LastLoginTime">
            <summary>
            最后登录时间
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.UserInfo.ErrorCount">
            <summary>
            登录错误次数
            </summary>
        </member>
        <member name="T:IIRS.Models.EntityModel.UserRole">
            <summary>
            用户角色关联表
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.UserRole.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.UserRole.IsDeleted">
             <summary>
            获取或设置是否禁用，逻辑上的删除，非物理删除
             </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.UserRole.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:IIRS.Models.EntityModel.UserRole.RoleId">
            <summary>
            角色ID
            </summary>
        </member>
        <member name="T:IIRS.Models.ServerModel.DataBaseType">
            <summary>
            数据库类型枚举
            </summary>
        </member>
        <member name="T:IIRS.Models.ServerModel.MutiDBOperate">
            <summary>
            数据库连接信息
            </summary>
        </member>
        <member name="T:IIRS.Models.ServerModel.Love">
            <summary>
            这是爱
            </summary>
        </member>
        <member name="T:IIRS.Models.ServerModel.SiteConfig">
            <summary>
            系统配置类
            </summary>
        </member>
        <member name="P:IIRS.Models.ServerModel.SiteConfig.ApiName">
            <summary>
            程序名称
            </summary>
        </member>
        <member name="P:IIRS.Models.ServerModel.SiteConfig.XMLDoc">
            <summary>
            Web API 描述文档名称
            在项目 -> 属性 -> 生成XML文档中指定的文件名
            </summary>
        </member>
        <member name="P:IIRS.Models.ServerModel.SiteConfig.RoutePrefix">
            <summary>
            Web API 前缀
            /{RoutePrefix}/controller/action
            </summary>
        </member>
        <member name="P:IIRS.Models.ServerModel.SiteConfig.MainDB">
            <summary>
            系统主数据库
            </summary>
        </member>
        <member name="P:IIRS.Models.ServerModel.SiteConfig.DBS">
            <summary>
            数据库连接集合
            </summary>
        </member>
        <member name="P:IIRS.Models.ServerModel.SiteConfig.SignalRPath">
            <summary>
            SignalR服务地址
            </summary>
        </member>
        <member name="P:IIRS.Models.ServerModel.SiteConfig.Encrypt">
            <summary>
            AccessToken加密信息
            </summary>
        </member>
        <member name="T:IIRS.Models.ServerModel.Encrypt">
            <summary>
            加密信息类
            </summary>
        </member>
        <member name="P:IIRS.Models.ServerModel.Encrypt.Secret">
            <summary>
            密钥字符串
            </summary>
        </member>
        <member name="P:IIRS.Models.ServerModel.Encrypt.Issuer">
            <summary>
            发行人
            </summary>
        </member>
        <member name="P:IIRS.Models.ServerModel.Encrypt.Audience">
            <summary>
            读者
            </summary>
        </member>
        <member name="T:IIRS.Models.ViewModel.MessageModel`1">
            <summary>
            通用返回信息类
            </summary>
        </member>
        <member name="P:IIRS.Models.ViewModel.MessageModel`1.success">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="P:IIRS.Models.ViewModel.MessageModel`1.msg">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:IIRS.Models.ViewModel.MessageModel`1.response">
            <summary>
            返回数据集合
            </summary>
        </member>
        <member name="T:IIRS.Models.ViewModel.PageModel`1">
            <summary>
            通用分页信息类
            </summary>
        </member>
        <member name="P:IIRS.Models.ViewModel.PageModel`1.page">
            <summary>
            当前页标
            </summary>
        </member>
        <member name="P:IIRS.Models.ViewModel.PageModel`1.pageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:IIRS.Models.ViewModel.PageModel`1.dataCount">
            <summary>
            数据总数
            </summary>
        </member>
        <member name="P:IIRS.Models.ViewModel.PageModel`1.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:IIRS.Models.ViewModel.PageModel`1.data">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="T:IIRS.Models.ViewModel.WeatherForecast">
            <summary>
            
            </summary>
        </member>
        <member name="P:IIRS.Models.ViewModel.WeatherForecast.Date">
            <summary>
            
            </summary>
        </member>
        <member name="P:IIRS.Models.ViewModel.WeatherForecast.TemperatureC">
            <summary>
            
            </summary>
        </member>
        <member name="P:IIRS.Models.ViewModel.WeatherForecast.TemperatureF">
            <summary>
            
            </summary>
        </member>
        <member name="P:IIRS.Models.ViewModel.WeatherForecast.Summary">
            <summary>
            
            </summary>
        </member>
        <member name="M:IIRS.Program.Main(System.String[])">
            <summary>
            程序入口
            </summary>
            <param name="args">命令行参数</param>
        </member>
        <member name="F:IIRS.Repository.Base.BaseRepository`1._dbBase">
            <summary>
            数据库对象集合
            </summary>
        </member>
        <member name="P:IIRS.Repository.Base.BaseRepository`1._db">
            <summary>
            数据库对象,如果指定了实体类的标签，则返回标签声明的数据库对象，否则返回主数据库对象
            标签写法
            [SugarTable("EntityName", "ConnId")]
            public class EntityName
            {
                ...
            }
            其中，EntityName 为实体类名称，ConnId 为appsettings.json 中 DBS 段中 ConnId
            </summary>
        </member>
        <member name="P:IIRS.Repository.Base.BaseRepository`1.Db">
            <summary>
            数据库对象
            </summary>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.#ctor(IIRS.IRepository.Base.IDBTransManagement)">
            <summary>
            初始化
            </summary>
            <param name="dbTransManagement"></param>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.QueryById(System.Object)">
            <summary>
            根据对象查询一条数据
            </summary>
            <param name="objId"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.QueryById(System.Object,System.Boolean)">
            <summary>
            根据ID查询一条数据
            </summary>
            <param name="objId">id（必须指定主键特性 [SugarColumn(IsPrimaryKey=true)]），如果是联合主键，请使用Where条件</param>
            <param name="blnUseCache">是否使用缓存</param>
            <returns>数据实体</returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.QueryByIDs(System.Object[])">
            <summary>
            根据ID查询数据
            </summary>
            <param name="lstIds">id列表（必须指定主键特性 [SugarColumn(IsPrimaryKey=true)]），如果是联合主键，请使用Where条件</param>
            <returns>数据实体列表</returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.Query">
            <summary>
            查询所有数据
            </summary>
            <returns>数据列表</returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.Query(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            查询数据列表
            </summary>
            <param name="whereExpression">whereExpression</param>
            <returns>数据列表</returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.Query(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean)">
            <summary>
            查询一个列表
            </summary>
            <param name="whereExpression"></param>
            <param name="orderByExpression"></param>
            <param name="isAsc"></param>
            <returns>数据列表</returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.Query(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.String)">
            <summary>
            查询前N条数据
            </summary>
            <param name="whereExpression">条件表达式</param>
            <param name="intTop">前N条</param>
            <param name="strOrderByFileds">排序字段，如name asc,age desc</param>
            <returns>数据列表</returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.QueryPage(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.String)">
            <summary>
            分页查询
            </summary>
            <param name="whereExpression">条件表达式</param>
            <param name="intPageIndex">页码（下标0）</param>
            <param name="intPageSize">页大小</param>
            <param name="strOrderByFileds">排序字段，如name asc,age desc</param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.QueryMuch``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,System.Object[]}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2,System.Boolean}})">
            <summary>
            查询-多表查询
            </summary> 
            <typeparam name="T">实体1</typeparam> 
            <typeparam name="T2">实体2</typeparam> 
            <typeparam name="T3">实体3</typeparam>
            <typeparam name="TResult">返回对象</typeparam>
            <param name="joinExpression">关联表达式 (join1,join2) => new object[] {JoinType.Left,join1.UserNo==join2.UserNo}</param> 
            <param name="selectExpression">返回表达式 (s1, s2) => new { Id =s1.UserNo, Id1 = s2.UserNo}</param>
            <param name="whereLambda">查询表达式 (w1, w2) =>w1.UserNo == "")</param> 
            <returns>值</returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.Add(`0)">
            <summary>
            写入实体数据
            </summary>
            <param name="entity">博文实体类</param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.Add(`0,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            写入实体数据
            </summary>
            <param name="entity">实体类</param>
            <param name="insertColumns">指定只插入列</param>
            <returns>返回自增量列</returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.Add(System.Collections.Generic.List{`0})">
            <summary>
            批量插入实体(速度快)
            </summary>
            <param name="listEntity">实体集合</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.Update(`0)">
            <summary>
            更新实体数据
            </summary>
            <param name="entity">实体类</param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.Update(`0,System.String)">
            <summary>
            更新实体数据
            </summary>
            <param name="entity">实体类</param>
            <param name="strWhere"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.Update(System.String,SqlSugar.SugarParameter[])">
            <summary>
            更新实体数据
            </summary>
            <param name="strSql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.Update(System.Object)">
            <summary>
            更新实体数据
            </summary>
            <param name="operateAnonymousObjects"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.Update(`0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String)">
            <summary>
            更新实体数据
            </summary>
            <param name="entity"></param>
            <param name="lstColumns"></param>
            <param name="lstIgnoreColumns"></param>
            <param name="strWhere"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.Delete(`0)">
            <summary>
            根据实体删除一条数据
            </summary>
            <param name="entity">实体类</param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.DeleteById(System.Object)">
            <summary>
            删除指定ID的数据
            </summary>
            <param name="id">主键ID</param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Repository.Base.BaseRepository`1.DeleteByIds(System.Object[])">
            <summary>
            删除指定ID集合的数据(批量删除)
            </summary>
            <param name="ids">主键ID集合</param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Repository.Base.DBTransManagement.GetDbClient">
            <summary>
            获取DB，保证唯一性
            </summary>
            <returns></returns>
        </member>
        <member name="T:IIRS.Repository.ModuleRepository">
            <summary>
            ModuleRepository
            </summary>	
        </member>
        <member name="T:IIRS.Repository.RoleModulePermissionRepository">
            <summary>
            RoleModulePermissionRepository
            </summary>
        </member>
        <member name="M:IIRS.Repository.RoleModulePermissionRepository.RoleModuleMaps">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IIRS.Repository.RoleModulePermissionRepository.GetRoleModule">
            <summary>
            获取全部 角色接口(按钮)关系数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:IIRS.Repository.RoleRepository">
            <summary>
            RoleRepository
            </summary>	
        </member>
        <member name="M:IIRS.Repository.UserInfoRepository.SaveUserInfo(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="loginName"></param>
            <param name="loginPwd"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Repository.UserInfoRepository.GetUserRoleNameStr(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="loginName"></param>
            <param name="loginPwd"></param>
            <returns></returns>
        </member>
        <member name="T:IIRS.Repository.UserRoleRepository">
            <summary>
            UserRoleRepository
            </summary>	
        </member>
        <member name="T:IIRS.Startup">
            <summary>
            启动类
            </summary>
        </member>
        <member name="M:IIRS.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            启动类初始化
            </summary>
            <param name="configuration">系统配置属性</param>
            <param name="env">环境变量</param>
        </member>
        <member name="M:IIRS.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            运行时将调用此方法。 使用此方法将服务添加到容器。
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:IIRS.Startup.ConfigureContainer(Autofac.ContainerBuilder)">
            <summary>
            Autofac 自动化依赖注入，注意需要在 Program.cs 中添加
            UseServiceProviderFactory(new AutofacServiceProviderFactory())
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:IIRS.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            运行时将调用此方法。 使用此方法来配置HTTP请求管道。
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="T:IIRS.Utilities.AppsettingsUtility">
            <summary>
            系统设置工具类
            </summary>
        </member>
        <member name="M:IIRS.Utilities.AppsettingsUtility.Initial(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            将配置项的值赋值给属性
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:IIRS.Utilities.AuthHelper.JwtHelper.IssueJwt(IIRS.Utilities.AuthHelper.TokenModelJwt)">
            <summary>
            颁发JWT字符串
            </summary>
            <param name="tokenModel"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Utilities.AuthHelper.JwtHelper.SerializeJwt(System.String)">
            <summary>
            解析
            </summary>
            <param name="jwtStr"></param>
            <returns></returns>
        </member>
        <member name="T:IIRS.Utilities.AuthHelper.TokenModelJwt">
            <summary>
            令牌
            </summary>
        </member>
        <member name="P:IIRS.Utilities.AuthHelper.TokenModelJwt.Uid">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IIRS.Utilities.AuthHelper.TokenModelJwt.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:IIRS.Utilities.AuthHelper.TokenModelJwt.Work">
            <summary>
            职能
            </summary>
        </member>
        <member name="T:IIRS.Utilities.AuthHelper.JwtToken">
            <summary>
            JWTToken生成类
            </summary>
        </member>
        <member name="M:IIRS.Utilities.AuthHelper.JwtToken.BuildJwtToken(System.Security.Claims.Claim[],IIRS.Utilities.AuthHelper.PermissionRequirement)">
            <summary>
            获取基于JWT的Token
            </summary>
            <param name="claims">需要在登陆的时候配置</param>
            <param name="permissionRequirement">在startup中定义的参数</param>
            <returns></returns>
        </member>
        <member name="T:IIRS.Utilities.AuthHelper.PermissionHandler">
            <summary>
            权限授权处理器
            </summary>
        </member>
        <member name="P:IIRS.Utilities.AuthHelper.PermissionHandler.Schemes">
            <summary>
            验证方案提供对象
            </summary>
        </member>
        <member name="M:IIRS.Utilities.AuthHelper.PermissionHandler.#ctor(IIRS.IRepository.IRoleModulePermissionRepository,Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider,Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Logging.ILogger{IIRS.Utilities.AuthHelper.PermissionHandler})">
            <summary>
            构造函数注入
            </summary>
            <param name="roleModulePermissionRepository"></param>
            <param name="schemes"></param>
            <param name="accessor"></param>
            <param name="logger"></param>
        </member>
        <member name="M:IIRS.Utilities.AuthHelper.PermissionHandler.GetClientIP(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获得客户端 IP 地址
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:IIRS.Utilities.AuthHelper.PermissionItem">
            <summary>
            用户或角色或其他凭据实体,就像是订单详情一样
            之前的名字是 Permission
            </summary>
        </member>
        <member name="P:IIRS.Utilities.AuthHelper.PermissionItem.Role">
            <summary>
            用户或角色或其他凭据名称
            </summary>
        </member>
        <member name="P:IIRS.Utilities.AuthHelper.PermissionItem.Url">
            <summary>
            请求Url
            </summary>
        </member>
        <member name="T:IIRS.Utilities.AuthHelper.PermissionRequirement">
            <summary>
            必要参数类，类似一个订单信息
            继承 IAuthorizationRequirement，用于设计自定义权限处理器PermissionHandler
            因为AuthorizationHandler 中的泛型参数 TRequirement 必须继承 IAuthorizationRequirement
            </summary>
        </member>
        <member name="P:IIRS.Utilities.AuthHelper.PermissionRequirement.Permissions">
            <summary>
            用户权限集合，一个订单包含了很多详情，
            同理，一个网站的认证发行中，也有很多权限详情(这里是Role和URL的关系)
            </summary>
        </member>
        <member name="P:IIRS.Utilities.AuthHelper.PermissionRequirement.DeniedAction">
            <summary>
            无权限action
            </summary>
        </member>
        <member name="P:IIRS.Utilities.AuthHelper.PermissionRequirement.ClaimType">
            <summary>
            认证授权类型
            </summary>
        </member>
        <member name="P:IIRS.Utilities.AuthHelper.PermissionRequirement.LoginPath">
            <summary>
            请求路径
            </summary>
        </member>
        <member name="P:IIRS.Utilities.AuthHelper.PermissionRequirement.Issuer">
            <summary>
            发行人
            </summary>
        </member>
        <member name="P:IIRS.Utilities.AuthHelper.PermissionRequirement.Audience">
            <summary>
            订阅人
            </summary>
        </member>
        <member name="P:IIRS.Utilities.AuthHelper.PermissionRequirement.Expiration">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:IIRS.Utilities.AuthHelper.PermissionRequirement.SigningCredentials">
            <summary>
            签名验证
            </summary>
        </member>
        <member name="M:IIRS.Utilities.AuthHelper.PermissionRequirement.#ctor(System.String,System.Collections.Generic.List{IIRS.Utilities.AuthHelper.PermissionItem},System.String,System.String,System.String,Microsoft.IdentityModel.Tokens.SigningCredentials,System.TimeSpan)">
            <summary>
            构造
            </summary>
            <param name="deniedAction">拒约请求的url</param>
            <param name="permissions">权限集合</param>
            <param name="claimType">声明类型</param>
            <param name="issuer">发行人</param>
            <param name="audience">订阅人</param>
            <param name="signingCredentials">签名验证实体</param>
            <param name="expiration">过期时间</param>
        </member>
        <member name="T:IIRS.Utilities.Common.CachingAttribute">
            <summary>
            这个Attribute就是使用时候的验证，把它添加到要缓存数据的方法中，即可完成缓存的操作。
            </summary>
        </member>
        <member name="P:IIRS.Utilities.Common.CachingAttribute.AbsoluteExpiration">
            <summary>
            缓存绝对过期时间（分钟）
            </summary>
        </member>
        <member name="T:IIRS.Utilities.Common.UseTranAttribute">
            <summary>
            这个Attribute就是使用时候的验证，把它添加到需要执行事务的方法中，即可完成事务的操作。
            </summary>
        </member>
        <member name="T:IIRS.Utilities.Filter.GlobalRoutePrefixFilter">
            <summary>
            全局路由前缀公约
            </summary>
        </member>
        <member name="T:IIRS.Utilities.MD5Helper">
            <summary>
            MD5 辅助类
            </summary>
        </member>
        <member name="M:IIRS.Utilities.MD5Helper.MD5Encrypt16(System.String)">
            <summary>
            16位MD5加密
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Utilities.MD5Helper.MD5Encrypt32(System.String)">
            <summary>
            32位MD5加密
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Utilities.MD5Helper.MD5Encrypt64(System.String)">
            <summary>
            64位MD5加密
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:IIRS.Utilities.MemoryCache.ICaching">
            <summary>
            简单的缓存接口，只有查询和添加，以后会进行扩展
            </summary>
        </member>
        <member name="T:IIRS.Utilities.MemoryCache.MemoryCaching">
            <summary>
            实例化缓存接口ICaching
            </summary>
        </member>
        <member name="T:IIRS.Utilities.SignalRHelper.MessageHub">
            <summary>
            TODO 消息Hub 未完成
            </summary>
        </member>
        <member name="F:IIRS.Utilities.SignalRHelper.MessageHub.Users">
            <summary>
            
            </summary>
        </member>
        <member name="M:IIRS.Utilities.SignalRHelper.MessageHub.SendMessage(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:IIRS.Utilities.SwaggerHelper.ApiVersions">
            <summary>
            自定义 API 接口版本
            </summary>
        </member>
        <member name="F:IIRS.Utilities.SwaggerHelper.ApiVersions.V1">
            <summary>
            V1 版本
            </summary>
        </member>
        <member name="F:IIRS.Utilities.SwaggerHelper.ApiVersions.V2">
            <summary>
            V2 版本
            </summary>
        </member>
        <member name="T:IIRS.Utilities.SwaggerHelper.CustomRouteAttribute">
            <summary>
            自定义路由 /{RoutePrefix}/{version}/[controler]/[action]
            </summary>
        </member>
        <member name="P:IIRS.Utilities.SwaggerHelper.CustomRouteAttribute.GroupName">
            <summary>
            分组名称，实现接口 IApiDescriptionGroupNameProvider
            </summary>
        </member>
        <member name="M:IIRS.Utilities.SwaggerHelper.CustomRouteAttribute.#ctor(System.String)">
            <summary>
            自定义路由前缀构造函数，继承基类路由
            </summary>
            <param name="actionName"></param>
        </member>
        <member name="M:IIRS.Utilities.SwaggerHelper.CustomRouteAttribute.#ctor(IIRS.Utilities.SwaggerHelper.ApiVersions,System.String)">
            <summary>
            自定义版本+自定义路由前缀构造函数，继承基类路由
            </summary>
            <param name="actionName"></param>
            <param name="version"></param>
        </member>
        <member name="T:IIRS.Utilities.UtilConvert">
            <summary>
            类型转换类
            </summary>
        </member>
        <member name="M:IIRS.Utilities.UtilConvert.ObjToInt(System.Object)">
            <summary>
            Obj 转 int
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Utilities.UtilConvert.ObjToInt(System.Object,System.Int32)">
            <summary>
            Obj 转 int
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Utilities.UtilConvert.ObjToMoney(System.Object)">
            <summary>
            Obj 转 金额
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Utilities.UtilConvert.ObjToMoney(System.Object,System.Double)">
            <summary>
            Obj 转 金额
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Utilities.UtilConvert.ObjToString(System.Object)">
            <summary>
            Obj 转 string
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Utilities.UtilConvert.ObjToString(System.Object,System.String)">
            <summary>
            Obj 转 string
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Utilities.UtilConvert.ObjToDecimal(System.Object)">
            <summary>
            Obj 转 Decimal
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Utilities.UtilConvert.ObjToDecimal(System.Object,System.Decimal)">
            <summary>
            Obj 转 Decimal
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Utilities.UtilConvert.ObjToDate(System.Object)">
            <summary>
            Obj 转 DateTime
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Utilities.UtilConvert.ObjToDate(System.Object,System.DateTime)">
            <summary>
            Obj 转 DateTime
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:IIRS.Utilities.UtilConvert.ObjToBool(System.Object)">
            <summary>
            Obj 转 bool
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
    </members>
</doc>
